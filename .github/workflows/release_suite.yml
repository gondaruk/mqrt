name: Release Suite

on:
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always

jobs:

  preconditions:
    name: Pre-release conditions
    runs-on: ubuntu-latest
    steps:
      - name: Wait for other checks to succeed
        uses: lewagon/wait-on-check-action@v1.0.0
        with:
          ref: ${{ github.ref }}
          running-workflow-name: 'Pre-release conditions'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  # Build
  build-x86_64-unknown-linux-gnu:
    runs-on: ubuntu-latest
    needs: [ preconditions ]
    steps:
      - uses: actions/checkout@v2
      - run: make ci-prepare
      - run: echo VERSION=$(make version) >> $GITHUB_ENV

      - name: Build
        run: make package-all-x86_64-unknown-linux-gnu

      - uses: actions/upload-artifact@v2
        with:
          name: mqrt-${{ env.VERSION }}-x86_64-unknown-linux-gnu.tar.gz
          path: "./target/artifacts/mqrt-${{ env.VERSION }}-x86_64-unknown-linux-gnu.tar.gz"

      - uses: actions/upload-artifact@v2
        with:
          name: mqrt-${{ env.VERSION }}-amd64.deb
          path: "./target/artifacts/mqrt-${{ env.VERSION }}-amd64.deb"

  build-x86_64-unknown-linux-musl:
    runs-on: ubuntu-latest
    needs: [ preconditions ]
    steps:
      - uses: actions/checkout@v2
      - run: make ci-prepare
      - run: echo VERSION=$(make version) >> $GITHUB_ENV

      - name: Build
        run: make package-all-x86_64-unknown-linux-musl

      - uses: actions/upload-artifact@v2
        with:
          name: mqrt-${{ env.VERSION }}-x86_64-unknown-linux-musl.tar.gz
          path: "./target/artifacts/mqrt-${{ env.VERSION }}-x86_64-unknown-linux-musl.tar.gz"

  build-aarch64-unknown-linux-gnu:
    runs-on: ubuntu-latest
    needs: [ preconditions ]
    steps:
      - uses: actions/checkout@v2
      - run: make ci-prepare
      - run: echo VERSION=$(make version) >> $GITHUB_ENV

      - name: Build
        run: make package-all-aarch64-unknown-linux-gnu

      - uses: actions/upload-artifact@v2
        with:
          name: mqrt-${{ env.VERSION }}-aarch64-unknown-linux-gnu.tar.gz
          path: "./target/artifacts/mqrt-${{ env.VERSION }}-aarch64-unknown-linux-gnu.tar.gz"

      - uses: actions/upload-artifact@v2
        with:
          name: mqrt-${{ env.VERSION }}-arm64.deb
          path: "./target/artifacts/mqrt-${{ env.VERSION }}-arm64.deb"

  build-aarch64-unknown-linux-musl:
    runs-on: ubuntu-latest
    needs: [ preconditions ]
    steps:
      - uses: actions/checkout@v2
      - run: make ci-prepare
      - run: echo VERSION=$(make version) >> $GITHUB_ENV

      - name: Build
        run: make package-all-aarch64-unknown-linux-musl

      - uses: actions/upload-artifact@v2
        with:
          name: mqrt-${{ env.VERSION }}-aarch64-unknown-linux-musl.tar.gz
          path: "./target/artifacts/mqrt-${{ env.VERSION }}-aarch64-unknown-linux-musl.tar.gz"

  build-armv7-unknown-linux-gnueabihf:
    runs-on: ubuntu-latest
    needs: [ preconditions ]
    steps:
      - uses: actions/checkout@v2
      - run: make ci-prepare
      - run: echo VERSION=$(make version) >> $GITHUB_ENV

      - name: Build
        run: make package-all-armv7-unknown-linux-gnueabihf

      - uses: actions/upload-artifact@v2
        with:
          name: mqrt-${{ env.VERSION }}-armv7-unknown-linux-gnueabihf.tar.gz
          path: "./target/artifacts/mqrt-${{ env.VERSION }}-armv7-unknown-linux-gnueabihf.tar.gz"

      - uses: actions/upload-artifact@v2
        with:
          name: mqrt-${{ env.VERSION }}-armhf.deb
          path: "./target/artifacts/mqrt-${{ env.VERSION }}-armhf.deb"

  build-armv7-unknown-linux-musleabihf:
    runs-on: ubuntu-latest
    needs: [ preconditions ]
    steps:
      - uses: actions/checkout@v2
      - run: make ci-prepare
      - run: echo VERSION=$(make version) >> $GITHUB_ENV

      - name: Build
        run: make package-all-armv7-unknown-linux-musleabihf

      - uses: actions/upload-artifact@v2
        with:
          name: mqrt-${{ env.VERSION }}-armv7-unknown-linux-musleabihf.tar.gz
          path: "./target/artifacts/mqrt-${{ env.VERSION }}-armv7-unknown-linux-musleabihf.tar.gz"

  # Release
  release-docker:
    runs-on: ubuntu-latest
    needs:
      - build-x86_64-unknown-linux-gnu
      - build-x86_64-unknown-linux-musl
      - build-aarch64-unknown-linux-gnu
      - build-aarch64-unknown-linux-musl
      - build-armv7-unknown-linux-gnueabihf
      - build-armv7-unknown-linux-musleabihf
    steps:
      - uses: actions/checkout@v2
      - run: echo VERSION=$(make version) >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

        # Setup dockerx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          install: true

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

        # Get previously built artifacts
      - uses: actions/download-artifact@v2
        with:
          path: target/artifacts

      - name: Build docker images
        run: make docker-release

  release-github:
    runs-on: ubuntu-latest
    needs:
      - build-x86_64-unknown-linux-gnu
      - build-x86_64-unknown-linux-musl
      - build-aarch64-unknown-linux-gnu
      - build-aarch64-unknown-linux-musl
      - build-armv7-unknown-linux-gnueabihf
      - build-armv7-unknown-linux-musleabihf
    steps:
      - uses: actions/checkout@v2
      - run: echo VERSION=$(make version) >> $GITHUB_ENV

      - uses: actions/download-artifact@v2
        with:
          path: target/artifacts

      - name: Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            LICENSE
            target/artifacts/mqrt-${{ env.VERSION }}-amd64.deb
            target/artifacts/mqrt-${{ env.VERSION }}-x86_64-unknown-linux-gnu.tar.gz
            target/artifacts/mqrt-${{ env.VERSION }}-x86_64-unknown-linux-musl.tar.gz
            target/artifacts/mqrt-${{ env.VERSION }}-arm64.deb
            target/artifacts/mqrt-${{ env.VERSION }}-aarch64-unknown-linux-gnu.tar.gz
            target/artifacts/mqrt-${{ env.VERSION }}-aarch64-unknown-linux-musl.tar.gz
            target/artifacts/mqrt-${{ env.VERSION }}-armhf.deb
            target/artifacts/mqrt-${{ env.VERSION }}-armv7-unknown-linux-gnueabihf.tar.gz
            target/artifacts/mqrt-${{ env.VERSION }}-armv7-unknown-linux-musleabihf.tar.gz
